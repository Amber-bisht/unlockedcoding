version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: unlockedcoding-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: unlocked-coding
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - unlockedcoding-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: unlockedcoding-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - unlockedcoding-network

  # UnlockedCoding Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: unlockedcoding-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/unlocked-coding?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_key_here_change_this_in_production}
      SESSION_SECRET: ${SESSION_SECRET:-your_session_secret_here_change_this_in_production}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID:-}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET:-}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID:-}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET:-}
      GOOGLE_CALLBACK_URL: ${GOOGLE_CALLBACK_URL:-https://holidays-redis2.qbthl0.easypanel.host/api/auth/google/callback}
      GITHUB_CALLBACK_URL: ${GITHUB_CALLBACK_URL:-https://yourdomain.com/api/auth/github/callback}
    depends_on:
      mongodb:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - unlockedcoding-network
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: unlockedcoding-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - unlockedcoding-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  unlockedcoding-network:
    driver: bridge 